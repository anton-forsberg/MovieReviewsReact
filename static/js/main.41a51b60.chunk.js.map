{"version":3,"sources":["reviews/ReviewApi.js","config.js","reviews/ReviewSearch.js","reviews/ReviewListItem.js","reviews/ReviewList.js","reviews/Reviews.js","App.js","serviceWorker.js","index.js"],"names":["searchReviews","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","query","page","simulateNew","response","results","_args","arguments","wrap","_context","prev","next","length","undefined","axios","get","concat","sent","data","unshift","publication_date","abrupt","stop","_x","apply","this","ReviewSearch","debounceSearch","_this","timeout","clearTimeout","setTimeout","props","handleSearch","_this2","react_default","createElement","type","placeholder","onChange","e","target","value","PureComponent","ReviewListItem","review","Fragment","className","multimedia","alt","src","display_title","summary_short","href","link","url","class","byline","ReviewList","reviews","map","i","key","reviews_ReviewListItem","Reviews","state","getReviews","then","setState","loadMoreReviews","reviews_ReviewSearch","reviews_ReviewList","onClick","Component","App","src_reviews_Reviews","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.41a51b60.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport { api, apiKey } from '../config';\r\n\r\n/**\r\n * Loads a number of reviews from the api based on supplied parameters\r\n * @param {string} query string to search among movie titles\r\n * @param {number} page the current page being loaded\r\n * @param {boolean} simulateNew if true, adds an additional element to the start of the review list\r\n */\r\nexport const searchReviews = async (query, page = 0, simulateNew = false) => {\r\n    const response = await axios.get(`${api}seach.json?api-key=${apiKey}&query=${query || ''}&offset=${page * 20}`);\r\n    const results = response.data.results;\r\n\r\n    if (simulateNew)\r\n        results.unshift({ publication_date: '2099-01-01'});\r\n\r\n    return results;\r\n};","export const api = 'https://api.nytimes.com/svc/movies/v2/reviews/';\r\nexport const apiKey = 'gp4hUatPGKUq04RboAzm8bcA6NH86Bq5';","import React, { PureComponent } from 'react';\r\n\r\n/**\r\n * Component used to perform searches\r\n */\r\nclass ReviewSearch extends PureComponent {\r\n    /**\r\n     * Debounce the search input to prevent api flooding\r\n     */\r\n    debounceSearch = query => {\r\n        if (this.timeout) \r\n            clearTimeout(this.timeout);\r\n\r\n        this.timeout = setTimeout(() => {\r\n            this.props.handleSearch(query);\r\n            this.timeout = undefined;\r\n        }, 300);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <input type=\"text\" placeholder=\"Search reviews...\" onChange={e => this.debounceSearch(e.target.value)} />\r\n        );\r\n    }\r\n}\r\n\r\nexport default ReviewSearch;","import React from 'react';\r\n\r\n/**\r\n * Component for displaying a single review\r\n */\r\nfunction ReviewListItem(props) {\r\n    const { review } = props;\r\n    return (\r\n        <>\r\n            <div className=\"row\">\r\n                {\r\n                    review.multimedia && \r\n                    <img alt={review.multimedia.type} src={review.multimedia.src}/>\r\n                }\r\n                <div className=\"flex\">\r\n                    <h2>{review.display_title}</h2>\r\n                    <p><i>Published {review.publication_date}</i></p>\r\n                    <p>{review.summary_short}</p>\r\n                    <p>\r\n                        <a href={review.link.url}>\r\n                            <i class=\"fas fa-sign-out-alt\"></i> Read the full movie review by {review.byline}\r\n                        </a>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ReviewListItem;","import React from 'react';\r\nimport ReviewListItem from './ReviewListItem';\r\n\r\n/**\r\n * Component for listing reviews\r\n */\r\nfunction ReviewList(props) {\r\n    const { reviews } = props;\r\n    return (\r\n        <ul className=\"review-list\">\r\n           {\r\n               reviews.map((review, i) => {\r\n                   return (\r\n                       <li key={i}>\r\n                            <ReviewListItem review={review}/>\r\n                       </li>\r\n                   )\r\n               })\r\n           }\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default ReviewList;","import React, { Component } from 'react';\r\nimport { searchReviews } from './ReviewApi';\r\nimport ReviewSearch from './ReviewSearch';\r\nimport ReviewList from './ReviewList';\r\nimport './Reviews.scss';\r\n\r\n/**\r\n * Reviews feature module component\r\n */\r\nclass Reviews extends Component {\r\n    state = {\r\n        reviews: []\r\n    }\r\n\r\n    /**\r\n     * Loads the 20 latest reviews based on the supplied query parameter (disregarded if not set)\r\n     * @param query search term\r\n     */\r\n    getReviews = query => {\r\n        this.page = 0;\r\n        this.query = query;\r\n\r\n        searchReviews(query).then(reviews => {\r\n            this.setState({ reviews: reviews });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Load +20 more reviews\r\n     */\r\n    loadMoreReviews = () => {\r\n        searchReviews(this.query, ++this.page).then(reviews => {\r\n            this.setState({ reviews: this.state.reviews.concat(reviews) });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getReviews();\r\n    }\r\n\r\n    render(){\r\n        const { reviews } = this.state;\r\n\r\n        return (\r\n            <div class=\"reviews\">\r\n                <header>\r\n                    <ReviewSearch handleSearch={this.getReviews}/>\r\n                </header>\r\n                {\r\n                    reviews.length === 0 &&\r\n                    <h1>No reviews found</h1>\r\n                }\r\n                {\r\n                    reviews.length > 0 &&\r\n                    <>\r\n                        <h1>Movie Reviews</h1>\r\n                        <ReviewList reviews={reviews}/>\r\n                        {   \r\n                            (this.page + 1) * 20 === reviews.length &&\r\n                            <div className=\"show-more\" onClick={this.loadMoreReviews}><i class=\"fas fa-angle-down\"></i> More</div>\r\n                        }\r\n                    </>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Reviews;","import React from 'react';\nimport Reviews from './reviews/Reviews';\nimport './App.scss';\n\n/**\n * Main application component\n */\nfunction App() {\n  return (\n    <section className=\"content\">\n      <Reviews />\n      <a href=\"https://developer.nytimes.com\">\n        <img alt=\"Data provided by The New York Times\" src=\"https://developer.nytimes.com/files/poweredby_nytimes_200c.png?v=1539041473000\"/>\n      </a>\n    </section>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}